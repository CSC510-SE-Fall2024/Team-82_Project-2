#Copyright (C) 2023 SE23-Team44

# Licensed under the MIT License.
# See the LICENSE file in the project root for the full license information.

# This workflow will install Python dependencies, run tests and create a Code Coverage Report

name: Running Code Coverage
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python 3.10.15
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.15

      - name: Install dependencies
        run: |
          pip install coverage pytest-cov
          pip install -r requirements.txt
          echo "Requirements installed"

      - name: Run the tests
        run: |
          cd tests
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests  # Optional: label for specific types of tests
          files: ./tests/coverage.xml  # Path to the coverage report if specified
          fail_ci_if_error: true       # Ensures CI fails if Codecov upload fails

# This workflow will install Python dependencies, run tests and create a Code Coverage Report

# name: Code Coverage

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@main
#       - uses: codecov/codecov-action@v2
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}

#       - name: Generate coverage report
#         run: |
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#           pip install pytest
#           pip install pytest-cov
#           echo $PWD
#           export PYTHONPATH=$PWD
#           pytest --cov=./ --cov-report=xml
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           directory: ./coverage/reports/
#           env_vars: OS,PYTHON
#           fail_ci_if_error: true
#           files: ./coverage.xml,
#           flags: unittests
#           name: codecov-umbrella
#           path_to_write_report: ./coverage/codecov_report.txt
#           verbose: true
